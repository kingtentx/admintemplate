
@{
    Layout = null;
}
@using Newtonsoft.Json;
@model PageConfigModel;
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>用户管理</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="~/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="~/layuiadmin/style/soulTable.css" />
    <link rel="stylesheet" href="~/layuiadmin/style/admin.css" media="all">
</head>
<body>
    <form class="layui-form" lay-filter="form-group">
        <div class="layui-fluid">
            <div class="layui-row layui-col-space12">
                <div class="layui-col-xs4">

                    <div class="layui-card">
                        <div class="layui-card-header">组件</div>
                        <div class="layui-card-body">
                            <div style="padding-bottom: 10px;">
                                <div class="layui-form-item">
                                    <label class="layui-form-label">导航跟踪</label>
                                    <div class="layui-input-block">
                                        <input type="checkbox" name="chkIsShowTrack" lay-skin="switch" lay-text="显示|隐藏" lay-filter="chkIsShowTrack">
                                    </div>
                                </div>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddTitle">标题</button>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddContent">内容</button>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddBanner">Banner</button>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddImage">图片</button>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddImageTextList">图文列表</button>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddImageList">图片列表</button>
                                <button class="layui-btn layuiadmin-btn-admin" id="btnAddTextList">岗位信息</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="layui-col-md8">
                    <div class="layui-card">
                        <div class="layui-card-header"><span id="txtName"></span></div>
                        <div class="layui-card-body">
                            <table class="layui-hide" id="app-table" lay-filter="app-table"></table>
                            <script type="text/html" id="app-table-bar">
                                <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>
                            </script>
                        </div>
                    </div>
                </div>
                <div class="layui-form-item layui-layout-admin">
                    <div class="layui-input-block">
                        <div class="layui-footer" style="left: 0;">
                            <button class="layui-btn" id="btnSave">立即保存</button>
                            <a href="/Navigation/Index" class="layui-btn layui-btn-primary">返回列表</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <script src="~/layuiadmin/layui/layui.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        layui.config({
            base: '../../layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use(['index', 'soulTable','table'], function () {
            var $ = layui.$,
                form = layui.form,
                soulTable = layui.soulTable,
                table = layui.table;

            $(function () {
                var jsondata = '@Html.Raw(JsonConvert.SerializeObject(Model.PageControlList))';
                var data = $.parseJSON(jsondata);
                var index = data.findIndex(item => item.Type == @King.Utils.Enums.ControlType.Track.GetHashCode());
                //console.log(index);
                if (index >=0 ) {
                    $('input[name="chkIsShowTrack"]').attr('checked', 'checked');
                    form.render();
                }
                renderTable(data);
                //name            
                $('#txtName').html(getQueryString('name'));
            });

            var renderTable = function (data) {
                table.render({
                    elem: '#app-table'
                    , data: data
                    , rowDrag: {
                        done: function (obj) {
                        // 完成时（松开时）触发
                        //// 如果拖动前和拖动后无变化，则不会触发此方法
                        //console.log(obj.row) // 当前行数据
                        //console.log(obj.cache) // 改动后全表数据
                        //console.log(obj.oldIndex) // 原来的数据索引
                        //console.log(obj.newIndex) // 改动后数据索引
                    }}
                    , cols: [[
                        //{ type: 'checkbox' },
                       { field: 'Id', width: 60, title: 'ID' }
                        , { field: 'Name',  title: '名称' }
                        , {
                            field: 'Type', width: 100, title: '类型', templet: function (d) {
                                var type_name = '';
                                switch (d.Type) {
                                    case 0:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">导航跟踪</span>';
                                        break;
                                    case 1:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">标题</span>';
                                        break;
                                    case 2:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">内容</span>';
                                        break;
                                    case 3:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">Banner</span>';
                                        break;
                                    case 4:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">图片</span>';
                                        break;
                                    case 5:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">图片列表</span>';
                                        break;
                                    case 6:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">图文列表</span>';
                                        break;
                                    case 7:
                                        type_name = '<span class="layui-btn layui-btn-primary layui-btn-xs">招聘岗位</span>';
                                        break;

                                }
                                return type_name;
                            }
                        }
                        , { type: 'numbers', width: 60, title:'排序' }
                        , { align: 'center', width: 100, fixed: 'right', toolbar: '#app-table-bar' }
                    ]]
                    ,done: function () {
                        soulTable.render(this); // 拖拽排序
                    }
                    , page: false
                });
            }

            //监听工具条
            table.on('tool(app-table)', function (obj) {
                var datatable = table.cache['app-table'];
                var rowIndex = parseInt($(obj.tr).attr('data-index'));
                //console.log(obj.data);
                if (obj.event == 'del') {
                    layer.confirm('确认删除？', function (index) {
                        if (obj.data.Type == @King.Utils.Enums.ControlType.Track.GetHashCode()) {
                            $('input[name="chkIsShowTrack"]').removeAttr('checked');
                            form.render();
                        }
                        datatable.splice(rowIndex, 1);
                        renderTable(datatable);
                        layer.close(index);
                    });
                }
            });

            //监听switch
            form.on('switch(chkIsShowTrack)', function (obj) {
                //console.log(obj.elem.checked);
                var datatable = table.cache['app-table'];
                if (obj.elem.checked) {
                     var data = {
                            'Id': 0,
                            'Name': '导航跟踪',
                            'Type': @King.Utils.Enums.ControlType.Track.GetHashCode()
                        };
                        datatable.push(data);
                }
                else {
                    var rowIndex = datatable.findIndex(item => item.Type == @King.Utils.Enums.ControlType.Track.GetHashCode());
                    datatable.splice(parseInt(rowIndex), 1);
                }
                renderTable(datatable);
            });

            //保存菜单
            $('#btnSave').on('click', function () {
                layer.confirm("确认保存菜单吗？", function (index) {
                    var datatable = table.cache['app-table'];
                    console.log(datatable);
                    $.ajax({
                        type: "post",
                        contentType: "application/x-www-form-urlencoded",
                        url: "/Page/SavePage",
                        data: { "navigationId": @Model.NavigationId, "controlJson": JSON.stringify(datatable) },
                        dataType: "json",
                        success: function (res) {
                            if (res.code == 1000) {
                                layer.alert(res.msg);
                                location.reload();
                            }
                            else {
                                layer.msg(res.msg);
                            }
                        }
                    });
                    layer.close(index);
                });
                return false;
            });

            //选择标题
            $('#btnAddTitle').click(function () {
                var datatable = table.cache['app-table'];
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择标题',
                    content: '/Page/TitleList?flag=view',
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('title_data'));
                        for (var i = 0; i < jsondata.length; i++) {
                            var data = {
                                'Id': parseInt(jsondata[i].id),
                                'Name': jsondata[i].name,
                                'Type': @King.Utils.Enums.ControlType.Title.GetHashCode()
                            };
                            datatable.push(data);
                        }
                        renderTable(datatable);
                        layer.close(index);
                    }
                });
                //阻止刷新
                return false;
            });

            //选择内容
            $('#btnAddContent').click(function () {
                var datatable = table.cache['app-table'];
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择标题',
                    content: '/Page/ContentList?flag=view',
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('content_data'));
                        for (var i = 0; i < jsondata.length; i++) {
                            var data = {
                                "Id": parseInt(jsondata[i].id),
                                "Name": jsondata[i].name,
                                "Type": @King.Utils.Enums.ControlType.Content.GetHashCode()
                            };
                            datatable.push(data);
                        }
                        renderTable(datatable);
                        layer.close(index); //关闭弹层
                    }
                });
                //阻止刷新
                return false;
            });

             //选择Banner
            $('#btnAddBanner').click(function () {
                var datatable = table.cache['app-table'];
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择Banner',
                    content: '/Page/ImageList?type=0&flag=view',
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('banner_data'));
                        for (var i = 0; i < jsondata.length; i++) {
                            var data = {
                                "Id": parseInt(jsondata[i].id),
                                "Name": jsondata[i].name,
                                "Type": @King.Utils.Enums.ControlType.Banner.GetHashCode()
                            };
                            datatable.push(data);
                        }
                        renderTable(datatable);
                        layer.close(index); //关闭弹层
                    }
                });
                //阻止刷新
                return false;
            });

               //选择图片
            $('#btnAddImage').click(function () {
                var datatable = table.cache['app-table'];
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择图片',
                    content: '/Page/ImageList?type=1&flag=view',
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('image_data'));
                        for (var i = 0; i < jsondata.length; i++) {
                            var data = {
                                "Id": parseInt(jsondata[i].id),
                                "Name": jsondata[i].name,
                                "Type": @King.Utils.Enums.ControlType.Image.GetHashCode()
                            };
                            datatable.push(data);
                        }
                        renderTable(datatable);
                        layer.close(index); //关闭弹层
                    }
                });
                //阻止刷新
                return false;
            });

            //选择图文列表
            $('#btnAddImageTextList').click(function () {
                var datatable = table.cache['app-table'];
                var type = '@King.Utils.Enums.TagsType.ImageTextList.GetHashCode()';
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择标题',
                    content: '/Page/TagsList?type=' + type,
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('tagslist_data_' + type));
                        var names = [];
                        var tags = [];
                        for (var i = 0; i < jsondata.length; i++) {
                            names.push(jsondata[i].name);
                            var tag = {
                                "TagsId": parseInt(jsondata[i].id),
                                "TagsName": jsondata[i].name
                            };
                            tags.push(tag);
                        }
                        console.log(names, tags);                     
                        var data = {
                            "Id": datatable.length + 1,
                            "Name": names.join(','),
                            "Type": @King.Utils.Enums.ControlType.ImageTextList.GetHashCode(),
                            "Tags": tags
                            };
                        console.log(data);
                        datatable.push(data);
                        renderTable(datatable);
                        layer.close(index); //关闭弹层
                    }
                });
                //阻止刷新
                return false;
            });

            //选择图片列表
            $('#btnAddImageList').click(function () {
                var datatable = table.cache['app-table'];
                var type = '@King.Utils.Enums.TagsType.ImageList.GetHashCode()';
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择标题',
                    content: '/Page/TagsList?type=' + type,
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('tagslist_data_' + type));
                        var names = [];
                        var tags = [];
                        for (var i = 0; i < jsondata.length; i++) {
                            names.push(jsondata[i].name);
                            var tag = {
                                "TagsId": parseInt(jsondata[i].id),
                                "TagsName": jsondata[i].name
                            };
                            tags.push(tag);
                        }
                        console.log(names, tags);
                        var data = {
                            "Id": datatable.length + 1,
                            "Name": names.join(','),
                            "Type": @King.Utils.Enums.ControlType.ImageList.GetHashCode(),
                            "Tags": tags
                            };
                        console.log(data);
                        datatable.push(data);
                        renderTable(datatable);
                        layer.close(index); //关闭弹层
                    }
                });
                //阻止刷新
                return false;
            });

              //选择岗位列表
            $('#btnAddTextList').click(function () {
                var datatable = table.cache['app-table'];
                var type = '@King.Utils.Enums.TagsType.TextList.GetHashCode()';
                layer.open({
                    type: 2,
                    maxmin: true,
                    title: '选择标题',
                    content: '/Page/TagsList?type=' + type,
                    area: ['800px', '600px'],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        var jsondata = $.parseJSON(localStorage.getItem('tagslist_data_' + type));
                        var names = [];
                        var tags = [];
                        for (var i = 0; i < jsondata.length; i++) {
                            names.push(jsondata[i].name);
                            var tag = {
                                "TagsId": parseInt(jsondata[i].id),
                                "TagsName": jsondata[i].name
                            };
                            tags.push(tag);
                        }
                        console.log(names, tags);
                        var data = {
                            "Id": datatable.length + 1,
                            "Name": names.join(','),
                            "Type": @King.Utils.Enums.ControlType.TextList.GetHashCode(),
                            "Tags": tags
                            };
                        console.log(data);
                        datatable.push(data);
                        renderTable(datatable);
                        layer.close(index); //关闭弹层
                    }
                });
                //阻止刷新
                return false;
            });

    });
    </script>
</body>
</html>